
%slfmriGetInstancedb.m
%
%
% author: steeve laquitaine
%   date: 160114
% status: complete and tested
%purpose: make a database of instances, variables and stimvols
%         from one fMRI session
%
%  usage:
% 
%       o.dataPath = '/Volumes/Transcend/data/sltaskdotdirfmri05/slStckAnalyses/MotionComp/classif/myRandomCoh/accAtTimeleaveOneOutfisherbalancByRemovI/OFC/';
%       o.filename = 'ClassifStckSessmyRandomCoh_OFC_12-Jan-2016.mat';
%       o.sessPath = '/Volumes/Transcend/data/sltaskdotdirfmri05/s02520150814';
%       d          = slfmriGetInstancedb({'myRandomCoh','myRandomDir','mySwitch'},o)
% 
% input:
%
%         o : information to load data containing instances and stimvols.
%             The file loaded has been generated by slfmriClassify.m and
%             contains variables "c.i" of instances and "c.stimvol1" the
%             corresponding stimvols and the following task parameters
%             o.thisSessPath (e.g., session path) 
%             o.myGroup (e.g., = 'MotionComp')
%             o.myScan (e.g,= 1);
%             o.taskNum (e.g,= 2);
%             o.phaseNum(e.g, = 1);
%             o.segmentNum (e.g, = 2);
%
% variables : variables wanted in the database
%         s : file o.filename should contain the following information
%               s.session  = s.session{roipos};
%               s.stimvols = s.stimvols{roipos};
%               s.i        = s.i{roipos};
%               s.izsc     = s.izsc{roipos};
%
%output:
%
%     d : instances, variables and stimvols
%     o : data params

function [d,o] = slfmriGetInstancedb(variables,o)

otm = o;

%Load instances.
%Should be a variable "c.i" containing instances and vars associated variables
cd(o.dataPath)

%load instances and data params
load(o.filename);

%backup session path
if isfield(otm,'thisSessPath')
    o.thisSessPath = otm.thisSessPath;
end

%get roi position
roipos = find(strcmp(o.myROIname,otm.myROIname));
s.session  = s.session{roipos};
s.stimvols = s.stimvols{roipos};
s.i        = s.i{roipos};

%get session name
[~,session] = fileparts(o.thisSessPath);

%get session position
%in cell array
thisSession = find(strcmp(session,s.session));
%stim vols in the session
stimvolsThisS = s.stimvols{thisSession};
%instances in the session
instancesThisS = s.i{thisSession};

%get variables associated with each instance
%in this session
[db,o] = slfmrigetStimvolVars(stimvolsThisS,variables,o);

%update output params info
o.dataPath = otm.dataPath;
o.filename = otm.filename;
o.thisSessPath = otm.thisSessPath;

%get instances and stimvols
%in this session
nvarsInData = length(stimvolsThisS);
d.instances = [];
d.stimvols   = [];
for  j = 1 : nvarsInData
    d.instances = [d.instances; instancesThisS{j}];
    d.stimvols  = [d.stimvols  ; stimvolsThisS{j}'];
end

%stack instances and their variables
%sort data (stimvols, instances and variables) ascend
[d.stimvols,isort] = sort(d.stimvols);
d.instances = d.instances(isort,:);
nvars = length(variables); 

%re-map with instances
[d.stimvols,isort2] = intersect(db.stimvols,d.stimvols);
for i = 1 : nvars   
    d.(variables{i}) =  db.(variables{i})(isort2);
end

%back to data path
cd(o.dataPath)


